# Specify analysis options.
#
# Until there are meta linter rules, each desired lint must be explicitly enabled.
# See: https://github.com/dart-lang/linter/issues/288
#
# For a list of lints, see: http://dart-lang.github.io/linter/lints/
# See the configuration guide for more
# https://github.com/dart-lang/sdk/tree/master/pkg/analyzer#configuring-the-analyzer
#
# This file contains the analysis options used by "flutter analyze" and the
# dartanalyzer when analyzing code outside the flutter repository.

analyzer:
  plugins:
    - dart_code_linter
  exclude: [lib/generated_plugin_registrant.dart]
  errors:
    # treat missing required parameters as a warning (not a hint).
    missing_required_param: warning

linter:
  rules:
    #
    # Flutter default rules.
    #
    # these rules are documented on and in the same order as
    # the Dart Lint rules page to make maintenance easier
    # https://github.com/dart-lang/linter/blob/master/example/all.yaml
    # - always_declare_return_types
    # - always_specify_types
    # - annotate_overrides
    # - avoid_as
    - avoid_empty_else
    - avoid_init_to_null
    - avoid_return_types_on_setters
    - avoid_web_libraries_in_flutter
    - await_only_futures
    - camel_case_types
    - cancel_subscriptions
    - close_sinks
    # - comment_references # we do not presume as to what people want to reference in their dart docs
    # - constant_identifier_names # https://github.com/dart-lang/linter/issues/204
    - control_flow_in_finally
    - empty_constructor_bodies
    - empty_statements
    - hash_and_equals
    - implementation_imports
    # - invariant_booleans
    # - iterable_contains_unrelated_type
    - library_names
    # - library_prefixes
    # - list_remove_unrelated_type
    # - literal_only_boolean_expressions
    - non_constant_identifier_names
    # - one_member_abstracts
    # - only_throw_errors
    # - overridden_fields
    - package_api_docs
    - package_names
    - package_prefixed_library_names
    - prefer_is_not_empty
    # - prefer_mixin # https://github.com/dart-lang/language/issues/32
    # - public_member_api_docs
    - slash_for_doc_comments
    # - sort_constructors_first
    # - sort_unnamed_constructors_first
    # - super_goes_last # no longer needed w/ Dart 2
    - test_types_in_equals
    - throw_in_finally
    # - type_annotate_public_apis # subset of always_specify_types
    - type_init_formals
    # - unawaited_futures
    - unnecessary_brace_in_string_interps
    - unnecessary_getters_setters
    - unnecessary_statements
    - unrelated_type_equality_checks
    - valid_regexps
    #
    #
    # Effective Dart rules.
    #
    # These rules follow style from
    # https://dart.dev/guides/language/effective-dart
    - avoid_relative_lib_imports
    # - hash_and_equals # Already in Flutter rules.
    - prefer_relative_imports
    - avoid_catches_without_on_clauses
    - avoid_catching_errors
    # - avoid_classes_with_only_static_members # We like classes as namespaces.
    - avoid_equals_and_hash_code_on_mutable_classes
    - avoid_function_literals_in_foreach_calls
    # - avoid_init_to_null # Already in Flutter rules.
    - avoid_null_checks_in_equality_operators
    # - avoid_positional_boolean_parameters # Requires code changes.
    - avoid_private_typedef_functions
    # - avoid_return_types_on_setters # Already in Flutter rules.
    - avoid_returning_null
    - avoid_returning_this
    - avoid_setters_without_getters
    - avoid_types_on_closure_parameters
    - camel_case_extensions
    # - camel_case_types # Already in Flutter rules.
    - constant_identifier_names
    - curly_braces_in_flow_control_structures
    - directives_ordering
    # - empty_constructor_bodies # Already in Flutter rules.
    - file_names
    # - implementation_imports # Already in Flutter rules.
    # - library_names # Already in Flutter rules.
    - library_prefixes
    - lines_longer_than_80_chars
    # - non_constant_identifier_names # Already in Flutter rules.
    # - omit_local_variable_types # Requires code changes.
    - one_member_abstracts
    # - package_api_docs # Already in Flutter rules.
    - prefer_adjacent_string_concatenation
    - prefer_collection_literals
    - prefer_equal_for_default_values
    - prefer_final_fields
    - prefer_function_declarations_over_variables
    - prefer_generic_function_type_aliases
    - prefer_initializing_formals
    - prefer_interpolation_to_compose_strings
    - prefer_is_empty
    # - prefer_is_not_empty # Already in Flutter rules.
    - prefer_iterable_whereType
    - prefer_mixin
    - public_member_api_docs
    # - slash_for_doc_comments # Already in Flutter rules.
    - type_annotate_public_apis
    # - type_init_formals # Already in Flutter rules.
    # - unnecessary_brace_in_string_interps # Already in Flutter rules.
    - unnecessary_const
    # - unnecessary_getters_setters # Already in Flutter rules.
    - unnecessary_lambdas
    - unnecessary_new
    - unnecessary_this
    - use_rethrow_when_possible
    # - use_setters_to_change_properties # Requires code changes.
    - use_to_and_as_if_applicable
    #
    #
    # Pedantic Dart rules.
    #
    # - avoid_empty_else # Already in Flutter rules.
    # - avoid_relative_lib_imports # Already in Effective Dart rules.
    - avoid_types_as_parameter_names
    - no_duplicate_case_values
    # - unrelated_type_equality_checks # Already in Flutter rules.
    # - valid_regexps # Already in Flutter rules.
    - always_declare_return_types
    - always_require_non_null_named_parameters
    - annotate_overrides
    # - avoid_init_to_null # Already in Flutter rules.
    # - avoid_null_checks_in_equality_operators # Already in Effective Dart rules.
    # - avoid_return_types_on_setters # Already in Flutter rules.
    - avoid_shadowing_type_parameters
    # - camel_case_extensions # Already in Effective Dart rules.
    # - curly_braces_in_flow_control_structures # Already in Effective Dart rules.
    - empty_catches
    # - empty_constructor_bodies # Already in Flutter rules.
    # - library_names # Already in Effective Dart rules.
    - null_closures
    # - omit_local_variable_types # Already in Effective Dart rules.
    # - prefer_adjacent_string_concatenation # Already in Effective Dart rules.
    # - prefer_collection_literals # Already in Effective Dart rules.
    - prefer_conditional_assignment
    - prefer_contains
    # - prefer_equal_for_default_values # Already in Effective Dart rules.
    # - prefer_final_fields # Already in Effective Dart rules.
    - prefer_for_elements_to_map_fromIterable
    # - prefer_generic_function_type_aliases # Already in Effective Dart rules.
    - prefer_if_null_operators
    # - prefer_is_empty # Already in Effective Dart rules.
    # - prefer_is_not_empty # Already in Flutter rules.
    # - prefer_iterable_whereType # Already in Effective Dart rules.
    - prefer_single_quotes
    - prefer_spread_collections
    - recursive_getters
    # - slash_for_doc_comments # Already in Flutter rules.
    # - type_init_formals # Already in Flutter rules.
    - unawaited_futures
    # - unnecessary_const # Already in Effective Dart rules.
    # - unnecessary_new # Already in Effective Dart rules.
    - unnecessary_null_in_if_null_operators
    # - unnecessary_this # Already in Effective Dart rules.
    - use_function_type_syntax_for_parameters
    # - use_rethrow_when_possible # Already in Effective Dart rules.
    #
    #
    # Spreeloop rules.
    #
    - prefer_final_locals
    - require_trailing_commas

dart_code_linter:
  metrics:
    cyclomatic-complexity: 25
    number-of-parameters: 10
    maximum-nesting-level: 8
    source-lines-of-code: 100
    min-identifier-length: 2
  rules:
    # Dart rules.
    - avoid-collection-methods-with-unrelated-types:
        severity: style
    - avoid-global-state:
        severity: style
    - avoid-late-keyword:
        severity: style
    - avoid-missing-enum-constant-in-map:
        severity: style
    - avoid-nested-conditional-expressions:
        severity: style
    - avoid-non-null-assertion
    - avoid-throw-in-catch-block
    - avoid-unnecessary-type-assertions
    - avoid-unnecessary-type-casts
    - avoid-unrelated-type-assertions
    - avoid-unused-parameters:
        severity: style
    - binary-expression-operand-order:
        severity: style
    - double-literal-format:
        severity: style
    - format-comment:
        severity: style
    - member-ordering:
        severity: style
        order:
          - fields
          - getters-setters
          - methods
    - newline-before-return:
        severity: style
    - no-boolean-literal-compare:
        severity: style
    - no-empty-block:
        severity: style
    - no-equal-then-else:
        severity: style
    - no-object-declaration:
        severity: style
    - prefer-async-await:
        severity: style
    - prefer-conditional-expressions:
        severity: style
    - prefer-correct-identifier-length:
        severity: style
    - prefer-correct-type-name:
        severity: style
    - prefer-first:
        severity: style
    - prefer-last:
        severity: style

    # Flutter rules.
    - always-remove-listener:
        severity: style
    - avoid-border-all:
        severity: style
    - avoid-returning-widgets:
        severity: style
    - avoid-unnecessary-setstate:
        severity: style
    - avoid-wrapping-in-padding:
        severity: style
    - prefer-const-border-radius:
        severity: style
    - prefer-extracting-callbacks:
        severity: style
